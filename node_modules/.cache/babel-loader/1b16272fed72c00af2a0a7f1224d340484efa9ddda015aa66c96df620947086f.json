{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\main\\\\src\\\\pages\\\\desktop3.tsx\",\n  _s = $RefreshSig$();\nimport Navbar from \"../components/navbar\";\nimport ProductTemplate from \"../components/ProductTemplate\";\nimport { useParams } from \"react-router-dom\";\nimport Products from \"../productData\";\nimport '../ProductTemplate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Desktop3 = () => {\n  _s();\n  // Use useParams to get the value of :productId from the URL\n  const {\n    productId\n  } = useParams();\n\n  // Fetch the product details based on the productId\n  // Assuming you have an array of products, you can filter the product with the matching ID\n  const selectedProduct = Products.find(product => product.id.toString() === productId);\n  if (!selectedProduct) {\n    // Handle the case where no matching product is found\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Product not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative bg-white w-full h-[1024px] overflow-hidden text-left text-3xl text-darkslategray-100 font-sora md:relative fixed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[64px] left-[66px] w-[1202px] h-[863px]\",\n      children: /*#__PURE__*/_jsxDEV(ProductTemplate, {\n        product: selectedProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Desktop3, \"QX76Lr8G00NVlyiWUU0JNEO3QJE=\", false, function () {\n  return [useParams];\n});\n_c = Desktop3;\nexport default Desktop3;\nvar _c;\n$RefreshReg$(_c, \"Desktop3\");","map":{"version":3,"names":["Navbar","ProductTemplate","useParams","Products","jsxDEV","_jsxDEV","Desktop3","_s","productId","selectedProduct","find","product","id","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Downloads/main/src/pages/desktop3.tsx"],"sourcesContent":["import { FunctionComponent } from \"react\";\nimport Navbar from \"../components/navbar\";\nimport ProductTemplate from \"../components/ProductTemplate\";\nimport { useParams } from \"react-router-dom\";\nimport Products from \"../productData\";\nimport '../ProductTemplate.css'\n\ntype Products = {\n  id: number;\n  name: string;\n  imageSrc: string;\n  store: String;\n  price: number;\n  description: String;\n};\n\n\n\ntype Desktop3Props = {};\n\nconst Desktop3: FunctionComponent<Desktop3Props> = () => {\n  // Use useParams to get the value of :productId from the URL\n  const { productId } = useParams();\n\n  // Fetch the product details based on the productId\n  // Assuming you have an array of products, you can filter the product with the matching ID\n  const selectedProduct = Products.find(product => product.id.toString() === productId);\n\n  if (!selectedProduct) {\n    // Handle the case where no matching product is found\n    return <div>Product not found</div>;\n  }\n\n  return (\n    <div className=\"relative bg-white w-full h-[1024px] overflow-hidden text-left text-3xl text-darkslategray-100 font-sora md:relative fixed\">\n      <div className=\"absolute top-[64px] left-[66px] w-[1202px] h-[863px]\">\n        <ProductTemplate product={selectedProduct} />\n      </div>\n      <Navbar />\n    </div>\n\n  );\n};\n\nexport default Desktop3;\n"],"mappings":";;AACA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAe/B,MAAMC,QAA0C,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvD;EACA,MAAM;IAAEC;EAAU,CAAC,GAAGN,SAAS,CAAC,CAAC;;EAEjC;EACA;EACA,MAAMO,eAAe,GAAGN,QAAQ,CAACO,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKL,SAAS,CAAC;EAErF,IAAI,CAACC,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA;MAAAS,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,2HAA2H;IAAAL,QAAA,gBACxIT,OAAA;MAAKc,SAAS,EAAC,sDAAsD;MAAAL,QAAA,eACnET,OAAA,CAACJ,eAAe;QAACU,OAAO,EAAEF;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACNb,OAAA,CAACL,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGV,CAAC;AAACX,EAAA,CAtBID,QAA0C;EAAA,QAExBJ,SAAS;AAAA;AAAAkB,EAAA,GAF3Bd,QAA0C;AAwBhD,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}