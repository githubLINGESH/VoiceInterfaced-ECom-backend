{"ast":null,"code":"var _jsxFileName = \"D:\\\\main\\\\src\\\\components\\\\slider.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './css/slider.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const sliderItems = [\"/kithremovebgpreview-1@2x.png\", \"/mobilesremovebgpreview-1@2x.png\", \"/earphonesremovebgpreview-1@2x.png\", \"/lapremovebgpreview-1@2x.png\", \"/lapremovebgpreview-1@2x.png\", \"/lapremovebgpreview-1@2x.png\", \"/lapremovebgpreview-1@2x.png\"];\n  const totalSlides = sliderItems.length;\n  const visibleSlides = 5; // Number of visible slides in the container\n\n  // Duplicate first few slides at the end for seamless looping\n  const extendedSliderItems = [...sliderItems, ...sliderItems.slice(0, visibleSlides)];\n  useEffect(() => {\n    const moveSlider = () => {\n      setIsTransitioning(true);\n      setCurrentSlide(prevSlide => prevSlide + 1);\n    };\n    const interval = setInterval(moveSlider, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    if (isTransitioning && currentSlide === totalSlides) {\n      setTimeout(() => {\n        setIsTransitioning(false);\n        setCurrentSlide(0);\n      }, 300); // Match this timeout with the CSS transition duration\n    }\n  }, [currentSlide, isTransitioning, totalSlides]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-outer-container bg-gray-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-cont\",\n      style: {\n        transform: `translateX(-${currentSlide * (100 / visibleSlides)}%)`,\n        transition: isTransitioning ? 'transform 0.3s ease-in-out' : 'none'\n      },\n      children: extendedSliderItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-it bg-darkslategray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"slider-image object-contain\",\n          alt: \"\",\n          src: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Slider, \"bEejaW7eDgx54FzcxU9CGR7HLGg=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Slider","_s","currentSlide","setCurrentSlide","isTransitioning","setIsTransitioning","sliderItems","totalSlides","length","visibleSlides","extendedSliderItems","slice","moveSlider","prevSlide","interval","setInterval","clearInterval","setTimeout","className","children","style","transform","transition","map","item","index","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/main/src/components/slider.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './css/slider.css';\r\n\r\nconst Slider = () => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    const [isTransitioning, setIsTransitioning] = useState(false);\r\n    const sliderItems = [\r\n        \"/kithremovebgpreview-1@2x.png\",\r\n        \"/mobilesremovebgpreview-1@2x.png\",\r\n        \"/earphonesremovebgpreview-1@2x.png\",\r\n        \"/lapremovebgpreview-1@2x.png\",\r\n        \"/lapremovebgpreview-1@2x.png\",\r\n        \"/lapremovebgpreview-1@2x.png\",\r\n        \"/lapremovebgpreview-1@2x.png\"\r\n    ];\r\n    const totalSlides = sliderItems.length;\r\n    const visibleSlides = 5; // Number of visible slides in the container\r\n\r\n    // Duplicate first few slides at the end for seamless looping\r\n    const extendedSliderItems = [...sliderItems, ...sliderItems.slice(0, visibleSlides)];\r\n\r\n    useEffect(() => {\r\n        const moveSlider = () => {\r\n            setIsTransitioning(true);\r\n            setCurrentSlide((prevSlide) => prevSlide + 1);\r\n        };\r\n        const interval = setInterval(moveSlider, 3000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTransitioning && currentSlide === totalSlides) {\r\n            setTimeout(() => {\r\n                setIsTransitioning(false);\r\n                setCurrentSlide(0);\r\n            }, 300); // Match this timeout with the CSS transition duration\r\n        }\r\n    }, [currentSlide, isTransitioning, totalSlides]);\r\n\r\n    return (\r\n        <div className=\"slider-outer-container bg-gray-300\">\r\n            <div\r\n                className=\"slider-cont\"\r\n                style={{\r\n                    transform: `translateX(-${currentSlide * (100 / visibleSlides)}%)`,\r\n                    transition: isTransitioning ? 'transform 0.3s ease-in-out' : 'none'\r\n                }}\r\n            >\r\n                {extendedSliderItems.map((item, index) => (\r\n                    <div key={index} className=\"slider-it bg-darkslategray-100\">\r\n                        <img\r\n                            className=\"slider-image object-contain\"\r\n                            alt=\"\"\r\n                            src={item}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMS,WAAW,GAAG,CAChB,+BAA+B,EAC/B,kCAAkC,EAClC,oCAAoC,EACpC,8BAA8B,EAC9B,8BAA8B,EAC9B,8BAA8B,EAC9B,8BAA8B,CACjC;EACD,MAAMC,WAAW,GAAGD,WAAW,CAACE,MAAM;EACtC,MAAMC,aAAa,GAAG,CAAC,CAAC,CAAC;;EAEzB;EACA,MAAMC,mBAAmB,GAAG,CAAC,GAAGJ,WAAW,EAAE,GAAGA,WAAW,CAACK,KAAK,CAAC,CAAC,EAAEF,aAAa,CAAC,CAAC;EAEpFb,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAGA,CAAA,KAAM;MACrBP,kBAAkB,CAAC,IAAI,CAAC;MACxBF,eAAe,CAAEU,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACjD,CAAC;IACD,MAAMC,QAAQ,GAAGC,WAAW,CAACH,UAAU,EAAE,IAAI,CAAC;IAE9C,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACZ,IAAIQ,eAAe,IAAIF,YAAY,KAAKK,WAAW,EAAE;MACjDU,UAAU,CAAC,MAAM;QACbZ,kBAAkB,CAAC,KAAK,CAAC;QACzBF,eAAe,CAAC,CAAC,CAAC;MACtB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACb;EACJ,CAAC,EAAE,CAACD,YAAY,EAAEE,eAAe,EAAEG,WAAW,CAAC,CAAC;EAEhD,oBACIR,OAAA;IAAKmB,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eAC/CpB,OAAA;MACImB,SAAS,EAAC,aAAa;MACvBE,KAAK,EAAE;QACHC,SAAS,EAAG,eAAcnB,YAAY,IAAI,GAAG,GAAGO,aAAa,CAAE,IAAG;QAClEa,UAAU,EAAElB,eAAe,GAAG,4BAA4B,GAAG;MACjE,CAAE;MAAAe,QAAA,EAEDT,mBAAmB,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjC1B,OAAA;QAAiBmB,SAAS,EAAC,gCAAgC;QAAAC,QAAA,eACvDpB,OAAA;UACImB,SAAS,EAAC,6BAA6B;UACvCQ,GAAG,EAAC,EAAE;UACNC,GAAG,EAAEH;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC,GALIN,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA1DID,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AA4DZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}