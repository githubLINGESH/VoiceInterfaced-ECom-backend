{"ast":null,"code":"var _jsxFileName = \"D:\\\\main\\\\src\\\\pages\\\\desktop3.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Navbar from \"../components/navbar\";\nimport ProductTemplate from \"../components/ProductTemplate\";\nimport { useParams } from \"react-router-dom\";\nimport Products from \"../productData\";\nimport '../ProductTemplate.css';\nimport SideNavbar from \"../components/sidenavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Desktop3 = () => {\n  _s();\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isVoiceOpen, setIsVoiceOpen] = useState(false);\n  const handleSelectOption = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n  const toggleSidebar = () => {\n    setIsSidebarVisible(!isSidebarVisible);\n  };\n  const closeSidebar = () => {\n    setIsSidebarVisible(false);\n  };\n\n  // Use useParams to get the value of :productId from the URL\n  const {\n    productId\n  } = useParams();\n\n  // Fetch the product details based on the productId\n  // Assuming you have an array of products, you can filter the product with the matching ID\n  const selectedProduct = Products.find(product => product.id.toString() === productId);\n  if (!selectedProduct) {\n    // Handle the case where no matching product is found\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Product not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  const handleVoiceOption = () => {\n    setIsVoiceOpen(!isVoiceOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative bg-white w-full h-[1024px] overflow-hidden text-left text-3xl text-darkslategray-100 font-sora\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggleSidebar: toggleSidebar,\n      handleVoiceOption: handleVoiceOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isSidebarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 z-40\",\n      onClick: closeSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavbar, {\n      onSelect: handleSelectOption,\n      isVisible: isSidebarVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(ProductTemplate, {\n        product: selectedProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Desktop3, \"yQ9AXg/+LYc+idKVrrhnA+HqiXE=\", false, function () {\n  return [useParams];\n});\n_c = Desktop3;\nexport default Desktop3;\nvar _c;\n$RefreshReg$(_c, \"Desktop3\");","map":{"version":3,"names":["useState","Navbar","ProductTemplate","useParams","Products","SideNavbar","jsxDEV","_jsxDEV","Desktop3","_s","isSidebarVisible","setIsSidebarVisible","selectedOption","setSelectedOption","isVoiceOpen","setIsVoiceOpen","handleSelectOption","toggleSidebar","closeSidebar","productId","selectedProduct","find","product","id","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","handleVoiceOption","className","onClick","onSelect","isVisible","_c","$RefreshReg$"],"sources":["D:/main/src/pages/desktop3.tsx"],"sourcesContent":["import { FunctionComponent, useState} from \"react\";\r\nimport Navbar from \"../components/navbar\";\r\nimport ProductTemplate from \"../components/ProductTemplate\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Products from \"../productData\";\r\nimport '../ProductTemplate.css'\r\nimport SideNavbar from \"../components/sidenavbar\";\r\n\r\ntype Products = {\r\n  id: number;\r\n  name: string;\r\n  imageSrc: string;\r\n  store: String;\r\n  price: number;\r\n  description: String;\r\n};\r\n\r\n\r\n\r\ntype Desktop3Props = {};\r\n\r\nconst Desktop3: FunctionComponent<Desktop3Props> = () => {\r\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\r\n  const [selectedOption,setSelectedOption] = useState<string | null>(null);\r\n  const [isVoiceOpen, setIsVoiceOpen] = useState(false);\r\n\r\n    const handleSelectOption = (selectedOption: string | null) => {\r\n      setSelectedOption(selectedOption);\r\n    };\r\n\r\n    const toggleSidebar = () => {\r\n      setIsSidebarVisible(!isSidebarVisible);\r\n  };\r\n\r\n  const closeSidebar = () => {\r\n    setIsSidebarVisible(false);\r\n  };\r\n\r\n  // Use useParams to get the value of :productId from the URL\r\n  const { productId } = useParams();\r\n\r\n  // Fetch the product details based on the productId\r\n  // Assuming you have an array of products, you can filter the product with the matching ID\r\n  const selectedProduct = Products.find(product => product.id.toString() === productId);\r\n\r\n  if (!selectedProduct) {\r\n    // Handle the case where no matching product is found\r\n    return <div>Product not found</div>;\r\n  }\r\n\r\n  const handleVoiceOption = () =>{\r\n    setIsVoiceOpen(!isVoiceOpen);\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative bg-white w-full h-[1024px] overflow-hidden text-left text-3xl text-darkslategray-100 font-sora\">\r\n      <Navbar toggleSidebar={toggleSidebar} handleVoiceOption={handleVoiceOption}/>\r\n        {/* form div */}\r\n        {isSidebarVisible && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\r\n          onClick={closeSidebar}\r\n        />\r\n      )}\r\n      <SideNavbar onSelect={handleSelectOption} isVisible={isSidebarVisible} />\r\n\r\n      <div className=\"flex items-center justify-center\">\r\n        <ProductTemplate product={selectedProduct} />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Desktop3;\r\n"],"mappings":";;AAAA,SAA4BA,QAAQ,QAAO,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,wBAAwB;AAC/B,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAelD,MAAMC,QAA0C,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACY,cAAc,EAACC,iBAAiB,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EACxE,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMgB,kBAAkB,GAAIJ,cAA6B,IAAK;IAC5DC,iBAAiB,CAACD,cAAc,CAAC;EACnC,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BN,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EAC1C,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBP,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;;EAED;EACA,MAAM;IAAEQ;EAAU,CAAC,GAAGhB,SAAS,CAAC,CAAC;;EAEjC;EACA;EACA,MAAMiB,eAAe,GAAGhB,QAAQ,CAACiB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKL,SAAS,CAAC;EAErF,IAAI,CAACC,eAAe,EAAE;IACpB;IACA,oBAAOb,OAAA;MAAAkB,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,MAAMC,iBAAiB,GAAGA,CAAA,KAAK;IAC7Bf,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,oBACEP,OAAA;IAAKwB,SAAS,EAAC,yGAAyG;IAAAN,QAAA,gBACtHlB,OAAA,CAACN,MAAM;MAACgB,aAAa,EAAEA,aAAc;MAACa,iBAAiB,EAAEA;IAAkB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAE1EnB,gBAAgB,iBACjBH,OAAA;MACEwB,SAAS,EAAC,2CAA2C;MACrDC,OAAO,EAAEd;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACF,eACDtB,OAAA,CAACF,UAAU;MAAC4B,QAAQ,EAAEjB,kBAAmB;MAACkB,SAAS,EAAExB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzEtB,OAAA;MAAKwB,SAAS,EAAC,kCAAkC;MAAAN,QAAA,eAC/ClB,OAAA,CAACL,eAAe;QAACoB,OAAO,EAAEF;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAACpB,EAAA,CAnDID,QAA0C;EAAA,QAkBxBL,SAAS;AAAA;AAAAgC,EAAA,GAlB3B3B,QAA0C;AAqDhD,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}