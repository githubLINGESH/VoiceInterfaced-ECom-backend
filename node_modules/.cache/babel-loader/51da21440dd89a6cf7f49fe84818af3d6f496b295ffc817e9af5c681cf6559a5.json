{"ast":null,"code":"var _jsxFileName = \"D:\\\\main\\\\src\\\\components\\\\voiceInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './VoiceInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = [{\n  code: 'en-US',\n  name: 'English (US)'\n}, {\n  code: 'es-ES',\n  name: 'Spanish (Spain)'\n}, {\n  code: 'fr-FR',\n  name: 'French'\n}, {\n  code: 'de-DE',\n  name: 'German'\n}\n// Add more languages as needed\n];\n\nconst VoiceInterface = ({\n  onSelect,\n  isVoice\n}) => {\n  _s();\n  const [status, setStatus] = useState(\"Click the button to start\");\n  const [isListening, setIsListening] = useState(false);\n  const [language, setLanguage] = useState('en-US');\n  const recognitionRef = useRef(null);\n\n  // Initialize Speech Recognition\n  const initializeRecognition = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      setStatus('Speech recognition not supported in this browser.');\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.lang = language;\n    recognition.onstart = () => {\n      setStatus(\"Listening...\");\n      console.log(\"Speech recognition started.\");\n    };\n    recognition.onresult = event => {\n      const transcript = event.results[event.results.length - 1][0].transcript.trim();\n      setStatus(`You said: ${transcript}`);\n      console.log(\"Transcript received: \", transcript);\n      processUserInput(transcript);\n    };\n    recognition.onerror = event => {\n      setStatus(`Error occurred: ${event.error}`);\n      console.error(\"Speech recognition error: \", event.error);\n    };\n    recognition.onend = () => {\n      setStatus(\"Stopped listening.\");\n      console.log(\"Speech recognition stopped.\");\n    };\n    recognitionRef.current = recognition;\n  };\n  const startListening = () => {\n    if (!recognitionRef.current) {\n      initializeRecognition();\n    }\n    recognitionRef.current.start();\n    setIsListening(true);\n    console.log(\"Started listening...\");\n  };\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n    setIsListening(false);\n    console.log(\"Stopped listening...\");\n  };\n  const pauseListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n    setIsListening(false);\n    setStatus(\"Paused listening.\");\n    console.log(\"Paused listening...\");\n  };\n  const processUserInput = transcript => {\n    fetch('/processVoiceInput', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userInput: transcript\n      })\n    }).then(response => response.json()).then(data => {\n      const utterance = new SpeechSynthesisUtterance(data.response);\n      speechSynthesis.speak(utterance);\n      onSelect(data.response); // Use the onSelect prop\n    }).catch(error => {\n      console.error('Error processing input:', error);\n    });\n  };\n  const handleLanguageChange = e => {\n    setLanguage(e.target.value);\n    if (recognitionRef.current) {\n      recognitionRef.current.lang = e.target.value;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"language\",\n        children: \"Select Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"language\",\n        value: language,\n        onChange: handleLanguageChange,\n        children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lang.code,\n          children: lang.name\n        }, lang.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"voice-button\",\n      onClick: startListening,\n      disabled: isListening,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"voice-button\",\n      onClick: stopListening,\n      disabled: !isListening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"voice-button\",\n      onClick: pauseListening,\n      disabled: !isListening,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status\",\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(VoiceInterface, \"DEh3/K10npWhHhzxum9Qkg8MEa8=\");\n_c = VoiceInterface;\nexport default VoiceInterface;\nvar _c;\n$RefreshReg$(_c, \"VoiceInterface\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","languages","code","name","VoiceInterface","onSelect","isVoice","_s","status","setStatus","isListening","setIsListening","language","setLanguage","recognitionRef","initializeRecognition","window","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","console","log","onresult","event","transcript","results","length","trim","processUserInput","onerror","error","onend","current","startListening","start","stopListening","stop","pauseListening","fetch","method","headers","body","JSON","stringify","userInput","then","response","json","data","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","catch","handleLanguageChange","e","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/main/src/components/voiceInterface.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './VoiceInterface.css';\n\nconst languages = [\n    { code: 'en-US', name: 'English (US)' },\n    { code: 'es-ES', name: 'Spanish (Spain)' },\n    { code: 'fr-FR', name: 'French' },\n    { code: 'de-DE', name: 'German' },\n    // Add more languages as needed\n];\n\nconst VoiceInterface = ({ onSelect, isVoice }) => {\n    const [status, setStatus] = useState(\"Click the button to start\");\n    const [isListening, setIsListening] = useState(false);\n    const [language, setLanguage] = useState('en-US');\n    const recognitionRef = useRef(null);\n\n    // Initialize Speech Recognition\n    const initializeRecognition = () => {\n        if (!('webkitSpeechRecognition' in window)) {\n            setStatus('Speech recognition not supported in this browser.');\n            return;\n        }\n\n        const recognition = new window.webkitSpeechRecognition();\n        recognition.continuous = true;\n        recognition.interimResults = false;\n        recognition.lang = language;\n\n        recognition.onstart = () => {\n            setStatus(\"Listening...\");\n            console.log(\"Speech recognition started.\");\n        };\n\n        recognition.onresult = (event) => {\n            const transcript = event.results[event.results.length - 1][0].transcript.trim();\n            setStatus(`You said: ${transcript}`);\n            console.log(\"Transcript received: \", transcript);\n            processUserInput(transcript);\n        };\n\n        recognition.onerror = (event) => {\n            setStatus(`Error occurred: ${event.error}`);\n            console.error(\"Speech recognition error: \", event.error);\n        };\n\n        recognition.onend = () => {\n            setStatus(\"Stopped listening.\");\n            console.log(\"Speech recognition stopped.\");\n        };\n\n        recognitionRef.current = recognition;\n    };\n\n    const startListening = () => {\n        if (!recognitionRef.current) {\n            initializeRecognition();\n        }\n        recognitionRef.current.start();\n        setIsListening(true);\n        console.log(\"Started listening...\");\n    };\n\n    const stopListening = () => {\n        if (recognitionRef.current) {\n            recognitionRef.current.stop();\n        }\n        setIsListening(false);\n        console.log(\"Stopped listening...\");\n    };\n\n    const pauseListening = () => {\n        if (recognitionRef.current) {\n            recognitionRef.current.stop();\n        }\n        setIsListening(false);\n        setStatus(\"Paused listening.\");\n        console.log(\"Paused listening...\");\n    };\n\n    const processUserInput = (transcript) => {\n        fetch('/processVoiceInput', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ userInput: transcript })\n        })\n        .then(response => response.json())\n        .then(data => {\n            const utterance = new SpeechSynthesisUtterance(data.response);\n            speechSynthesis.speak(utterance);\n            onSelect(data.response);  // Use the onSelect prop\n        })\n        .catch(error => {\n            console.error('Error processing input:', error);\n        });\n    };\n\n    const handleLanguageChange = (e) => {\n        setLanguage(e.target.value);\n        if (recognitionRef.current) {\n            recognitionRef.current.lang = e.target.value;\n        }\n    };\n\n    return (\n        <div className=\"voice-interface\">\n            <div>\n                <label htmlFor=\"language\">Select Language:</label>\n                <select id=\"language\" value={language} onChange={handleLanguageChange}>\n                    {languages.map(lang => (\n                        <option key={lang.code} value={lang.code}>{lang.name}</option>\n                    ))}\n                </select>\n            </div>\n            <button className=\"voice-button\" onClick={startListening} disabled={isListening}>Start</button>\n            <button className=\"voice-button\" onClick={stopListening} disabled={!isListening}>Stop</button>\n            <button className=\"voice-button\" onClick={pauseListening} disabled={!isListening}>Pause</button>\n            <div id=\"status\" className=\"status\">{status}</div>\n        </div>\n    );\n};\n\nexport default VoiceInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}