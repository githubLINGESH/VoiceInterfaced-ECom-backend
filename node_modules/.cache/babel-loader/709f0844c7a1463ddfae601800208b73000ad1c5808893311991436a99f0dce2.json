{"ast":null,"code":"var _jsxFileName = \"D:\\\\main\\\\src\\\\pages\\\\desktop3.tsx\",\n  _s = $RefreshSig$();\nimport Navbar from \"../components/navbar\";\nimport ProductTemplate from \"../components/ProductTemplate\";\nimport { useParams } from \"react-router-dom\";\nimport Products from \"../productData\";\nimport '../ProductTemplate.css';\nimport SideNavbar from \"../components/sidenavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Desktop3 = () => {\n  _s();\n  // Use useParams to get the value of :productId from the URL\n  const {\n    productId\n  } = useParams();\n\n  // Fetch the product details based on the productId\n  // Assuming you have an array of products, you can filter the product with the matching ID\n  const selectedProduct = Products.find(product => product.id.toString() === productId);\n  if (!selectedProduct) {\n    // Handle the case where no matching product is found\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Product not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative bg-white w-full h-[1024px] overflow-hidden text-left text-3xl text-darkslategray-100 font-sora\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[64px] left-[66px] w-[1202px] h-[863px]\",\n      children: /*#__PURE__*/_jsxDEV(ProductTemplate, {\n        product: selectedProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      toggleSidebar: toggleSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isSidebarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid col-span-1 bg-whitesmoke-100\",\n      children: /*#__PURE__*/_jsxDEV(SideNavbar, {\n        onSelect: handleSelectOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Desktop3, \"QX76Lr8G00NVlyiWUU0JNEO3QJE=\", false, function () {\n  return [useParams];\n});\n_c = Desktop3;\nexport default Desktop3;\nvar _c;\n$RefreshReg$(_c, \"Desktop3\");","map":{"version":3,"names":["Navbar","ProductTemplate","useParams","Products","SideNavbar","jsxDEV","_jsxDEV","Desktop3","_s","productId","selectedProduct","find","product","id","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toggleSidebar","isSidebarVisible","onSelect","handleSelectOption","_c","$RefreshReg$"],"sources":["D:/main/src/pages/desktop3.tsx"],"sourcesContent":["import { FunctionComponent } from \"react\";\nimport Navbar from \"../components/navbar\";\nimport ProductTemplate from \"../components/ProductTemplate\";\nimport { useParams } from \"react-router-dom\";\nimport Products from \"../productData\";\nimport '../ProductTemplate.css'\nimport SideNavbar from \"../components/sidenavbar\";\n\ntype Products = {\n  id: number;\n  name: string;\n  imageSrc: string;\n  store: String;\n  price: number;\n  description: String;\n};\n\n\n\ntype Desktop3Props = {};\n\nconst Desktop3: FunctionComponent<Desktop3Props> = () => {\n  \n  // Use useParams to get the value of :productId from the URL\n  const { productId } = useParams();\n\n  // Fetch the product details based on the productId\n  // Assuming you have an array of products, you can filter the product with the matching ID\n  const selectedProduct = Products.find(product => product.id.toString() === productId);\n\n  if (!selectedProduct) {\n    // Handle the case where no matching product is found\n    return <div>Product not found</div>;\n  }\n\n  return (\n    <div className=\"relative bg-white w-full h-[1024px] overflow-hidden text-left text-3xl text-darkslategray-100 font-sora\">\n      <div className=\"absolute top-[64px] left-[66px] w-[1202px] h-[863px]\">\n        <ProductTemplate product={selectedProduct} />\n      </div>\n      <Navbar toggleSidebar={toggleSidebar}/>\n        {/* form div */}\n        {isSidebarVisible && (\n          <div className=\"grid col-span-1 bg-whitesmoke-100\">\n            <SideNavbar onSelect={handleSelectOption} />\n          </div>\n        )}\n    </div>\n\n  );\n};\n\nexport default Desktop3;\n"],"mappings":";;AACA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,wBAAwB;AAC/B,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAelD,MAAMC,QAA0C,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvD;EACA,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;;EAEjC;EACA;EACA,MAAMQ,eAAe,GAAGP,QAAQ,CAACQ,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKL,SAAS,CAAC;EAErF,IAAI,CAACC,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA;MAAAS,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,yGAAyG;IAAAL,QAAA,gBACtHT,OAAA;MAAKc,SAAS,EAAC,sDAAsD;MAAAL,QAAA,eACnET,OAAA,CAACL,eAAe;QAACW,OAAO,EAAEF;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACNb,OAAA,CAACN,MAAM;MAACqB,aAAa,EAAEA;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAEpCG,gBAAgB,iBACfhB,OAAA;MAAKc,SAAS,EAAC,mCAAmC;MAAAL,QAAA,eAChDT,OAAA,CAACF,UAAU;QAACmB,QAAQ,EAAEC;MAAmB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGV,CAAC;AAACX,EAAA,CA7BID,QAA0C;EAAA,QAGxBL,SAAS;AAAA;AAAAuB,EAAA,GAH3BlB,QAA0C;AA+BhD,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}