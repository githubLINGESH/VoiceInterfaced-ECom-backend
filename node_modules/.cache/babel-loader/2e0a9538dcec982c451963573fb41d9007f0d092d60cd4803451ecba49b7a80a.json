{"ast":null,"code":"var _jsxFileName = \"D:\\\\main\\\\src\\\\components\\\\voiceInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './css/voiceInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = [{\n  code: 'en-US',\n  name: 'English (US)'\n}, {\n  code: 'es-ES',\n  name: 'Spanish (Spain)'\n}, {\n  code: 'fr-FR',\n  name: 'French'\n}, {\n  code: 'de-DE',\n  name: 'German'\n}, {\n  code: 'ta-IN',\n  name: 'Tamil'\n}];\nconst VoiceInterface = ({\n  isVoice\n}) => {\n  _s();\n  const [status, setStatus] = useState(\"Click the button to start\");\n  const [isListening, setIsListening] = useState(false);\n  const [language, setLanguage] = useState('en-US');\n  const recognitionRef = useRef(null);\n\n  // Initialize Speech Recognition\n  const initializeRecognition = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      setStatus('Speech recognition not supported in this browser.');\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.lang = language;\n    recognition.onstart = () => {\n      setStatus(\"Listening...\");\n      console.log(\"Speech recognition started.\");\n    };\n    recognition.onresult = event => {\n      const transcript = event.results[event.results.length - 1][0].transcript.trim();\n      setStatus(`You said: ${transcript}`);\n      console.log(\"Transcript received: \", transcript);\n      processUserInput(transcript);\n    };\n    recognition.onerror = event => {\n      setStatus(`Error occurred: ${event.error}`);\n      console.error(\"Speech recognition error: \", event.error);\n    };\n    recognition.onend = () => {\n      setStatus(\"Stopped listening.\");\n      console.log(\"Speech recognition stopped.\");\n    };\n    recognitionRef.current = recognition;\n  };\n  const startListening = () => {\n    if (!recognitionRef.current) {\n      initializeRecognition();\n    }\n    recognitionRef.current.start();\n    setIsListening(true);\n    console.log(\"Started listening...\");\n  };\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n    setIsListening(false);\n    console.log(\"Stopped listening...\");\n  };\n  const pauseListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n    setIsListening(false);\n    setStatus(\"Paused listening.\");\n    console.log(\"Paused listening...\");\n  };\n  const processUserInput = transcript => {\n    fetch('http://localhost:3001/llm/prompted-res', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      include: Credential,\n      body: JSON.stringify({\n        userInput: transcript,\n        language: language\n      })\n    }).then(response => response.json()).then(data => {\n      const utterance = new SpeechSynthesisUtterance(data.Response);\n      speechSynthesis.speak(utterance);\n      //onSelect(data.response);  // Use the onSelect prop\n    }).catch(error => {\n      console.error('Error processing input:', error);\n    });\n  };\n  const handleLanguageChange = e => {\n    setLanguage(e.target.value);\n    if (recognitionRef.current) {\n      recognitionRef.current.lang = e.target.value;\n    }\n  };\n  if (!isVoice) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-y-0 right-0 bg-whitesmoke-100 z-50\",\n    style: {\n      width: \"305px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-interface\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language\",\n          children: \"Select Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language\",\n          value: language,\n          onChange: handleLanguageChange,\n          children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang.code,\n            children: lang.name\n          }, lang.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"voice-button\",\n        onClick: startListening,\n        disabled: isListening,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"voice-button\",\n        onClick: stopListening,\n        disabled: !isListening,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"voice-button\",\n        onClick: pauseListening,\n        disabled: !isListening,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"status\",\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(VoiceInterface, \"DEh3/K10npWhHhzxum9Qkg8MEa8=\");\n_c = VoiceInterface;\nexport default VoiceInterface;\nvar _c;\n$RefreshReg$(_c, \"VoiceInterface\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","languages","code","name","VoiceInterface","isVoice","_s","status","setStatus","isListening","setIsListening","language","setLanguage","recognitionRef","initializeRecognition","window","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","console","log","onresult","event","transcript","results","length","trim","processUserInput","onerror","error","onend","current","startListening","start","stopListening","stop","pauseListening","fetch","method","headers","include","Credential","body","JSON","stringify","userInput","then","response","json","data","utterance","SpeechSynthesisUtterance","Response","speechSynthesis","speak","catch","handleLanguageChange","e","target","value","className","style","width","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/main/src/components/voiceInterface.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './css/voiceInterface.css';\r\n\r\nconst languages = [\r\n    { code: 'en-US', name: 'English (US)' },\r\n    { code: 'es-ES', name: 'Spanish (Spain)' },\r\n    { code: 'fr-FR', name: 'French' },\r\n    { code: 'de-DE', name: 'German' },\r\n    { code: 'ta-IN', name: 'Tamil'}\r\n];\r\n\r\nconst VoiceInterface = ({ isVoice }) => {\r\n    const [status, setStatus] = useState(\"Click the button to start\");\r\n    const [isListening, setIsListening] = useState(false);\r\n    const [language, setLanguage] = useState('en-US');\r\n    const recognitionRef = useRef(null);\r\n\r\n    // Initialize Speech Recognition\r\n    const initializeRecognition = () => {\r\n        if (!('webkitSpeechRecognition' in window)) {\r\n            setStatus('Speech recognition not supported in this browser.');\r\n            return;\r\n        }\r\n\r\n        const recognition = new window.webkitSpeechRecognition();\r\n        recognition.continuous = true;\r\n        recognition.interimResults = false;\r\n        recognition.lang = language;\r\n\r\n        recognition.onstart = () => {\r\n            setStatus(\"Listening...\");\r\n            console.log(\"Speech recognition started.\");\r\n        };\r\n\r\n        recognition.onresult = (event) => {\r\n            const transcript = event.results[event.results.length - 1][0].transcript.trim();\r\n            setStatus(`You said: ${transcript}`);\r\n            console.log(\"Transcript received: \", transcript);\r\n            processUserInput(transcript);\r\n        };\r\n\r\n        recognition.onerror = (event) => {\r\n            setStatus(`Error occurred: ${event.error}`);\r\n            console.error(\"Speech recognition error: \", event.error);\r\n        };\r\n\r\n        recognition.onend = () => {\r\n            setStatus(\"Stopped listening.\");\r\n            console.log(\"Speech recognition stopped.\");\r\n        };\r\n\r\n        recognitionRef.current = recognition;\r\n    };\r\n\r\n    const startListening = () => {\r\n        if (!recognitionRef.current) {\r\n            initializeRecognition();\r\n        }\r\n        recognitionRef.current.start();\r\n        setIsListening(true);\r\n        console.log(\"Started listening...\");\r\n    };\r\n\r\n    const stopListening = () => {\r\n        if (recognitionRef.current) {\r\n            recognitionRef.current.stop();\r\n        }\r\n        setIsListening(false);\r\n        console.log(\"Stopped listening...\");\r\n    };\r\n\r\n    const pauseListening = () => {\r\n        if (recognitionRef.current) {\r\n            recognitionRef.current.stop();\r\n        }\r\n        setIsListening(false);\r\n        setStatus(\"Paused listening.\");\r\n        console.log(\"Paused listening...\");\r\n    };\r\n\r\n    const processUserInput = (transcript) => {\r\n        fetch('http://localhost:3001/llm/prompted-res', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            include : Credential,\r\n            body: JSON.stringify({ userInput: transcript , language : language})\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const utterance = new SpeechSynthesisUtterance(data.Response);\r\n            speechSynthesis.speak(utterance);\r\n            //onSelect(data.response);  // Use the onSelect prop\r\n        })\r\n        .catch(error => {\r\n            console.error('Error processing input:', error);\r\n        });\r\n    };\r\n\r\n    const handleLanguageChange = (e) => {\r\n        setLanguage(e.target.value);\r\n        if (recognitionRef.current) {\r\n            recognitionRef.current.lang = e.target.value;\r\n        }\r\n    };\r\n\r\n    if (!isVoice){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed inset-y-0 right-0 bg-whitesmoke-100 z-50\" style={{width:\"305px\"}}>\r\n        <div className=\"voice-interface\">\r\n            <div>\r\n                <label htmlFor=\"language\">Select Language:</label>\r\n                <select id=\"language\" value={language} onChange={handleLanguageChange}>\r\n                    {languages.map(lang => (\r\n                        <option key={lang.code} value={lang.code}>{lang.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <button className=\"voice-button\" onClick={startListening} disabled={isListening}>Start</button>\r\n            <button className=\"voice-button\" onClick={stopListening} disabled={!isListening}>Stop</button>\r\n            <button className=\"voice-button\" onClick={pauseListening} disabled={!isListening}>Pause</button>\r\n            <div id=\"status\" className=\"status\">{status}</div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VoiceInterface;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAG,CACd;EAAEC,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAe,CAAC,EACvC;EAAED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAkB,CAAC,EAC1C;EAAED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAS,CAAC,EACjC;EAAED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAS,CAAC,EACjC;EAAED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAO,CAAC,CAClC;AAED,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,2BAA2B,CAAC;EACjE,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAMgB,cAAc,GAAGf,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAMgB,qBAAqB,GAAGA,CAAA,KAAM;IAChC,IAAI,EAAE,yBAAyB,IAAIC,MAAM,CAAC,EAAE;MACxCP,SAAS,CAAC,mDAAmD,CAAC;MAC9D;IACJ;IAEA,MAAMQ,WAAW,GAAG,IAAID,MAAM,CAACE,uBAAuB,CAAC,CAAC;IACxDD,WAAW,CAACE,UAAU,GAAG,IAAI;IAC7BF,WAAW,CAACG,cAAc,GAAG,KAAK;IAClCH,WAAW,CAACI,IAAI,GAAGT,QAAQ;IAE3BK,WAAW,CAACK,OAAO,GAAG,MAAM;MACxBb,SAAS,CAAC,cAAc,CAAC;MACzBc,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;IAEDP,WAAW,CAACQ,QAAQ,GAAIC,KAAK,IAAK;MAC9B,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAACF,KAAK,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,UAAU,CAACG,IAAI,CAAC,CAAC;MAC/ErB,SAAS,CAAE,aAAYkB,UAAW,EAAC,CAAC;MACpCJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEG,UAAU,CAAC;MAChDI,gBAAgB,CAACJ,UAAU,CAAC;IAChC,CAAC;IAEDV,WAAW,CAACe,OAAO,GAAIN,KAAK,IAAK;MAC7BjB,SAAS,CAAE,mBAAkBiB,KAAK,CAACO,KAAM,EAAC,CAAC;MAC3CV,OAAO,CAACU,KAAK,CAAC,4BAA4B,EAAEP,KAAK,CAACO,KAAK,CAAC;IAC5D,CAAC;IAEDhB,WAAW,CAACiB,KAAK,GAAG,MAAM;MACtBzB,SAAS,CAAC,oBAAoB,CAAC;MAC/Bc,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;IAEDV,cAAc,CAACqB,OAAO,GAAGlB,WAAW;EACxC,CAAC;EAED,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACtB,cAAc,CAACqB,OAAO,EAAE;MACzBpB,qBAAqB,CAAC,CAAC;IAC3B;IACAD,cAAc,CAACqB,OAAO,CAACE,KAAK,CAAC,CAAC;IAC9B1B,cAAc,CAAC,IAAI,CAAC;IACpBY,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACvC,CAAC;EAED,MAAMc,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIxB,cAAc,CAACqB,OAAO,EAAE;MACxBrB,cAAc,CAACqB,OAAO,CAACI,IAAI,CAAC,CAAC;IACjC;IACA5B,cAAc,CAAC,KAAK,CAAC;IACrBY,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACvC,CAAC;EAED,MAAMgB,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAI1B,cAAc,CAACqB,OAAO,EAAE;MACxBrB,cAAc,CAACqB,OAAO,CAACI,IAAI,CAAC,CAAC;IACjC;IACA5B,cAAc,CAAC,KAAK,CAAC;IACrBF,SAAS,CAAC,mBAAmB,CAAC;IAC9Bc,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC,CAAC;EAED,MAAMO,gBAAgB,GAAIJ,UAAU,IAAK;IACrCc,KAAK,CAAC,wCAAwC,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,OAAO,EAAGC,UAAU;MACpBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,SAAS,EAAEtB,UAAU;QAAGf,QAAQ,EAAGA;MAAQ,CAAC;IACvE,CAAC,CAAC,CACDsC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACF,IAAI,CAACG,QAAQ,CAAC;MAC7DC,eAAe,CAACC,KAAK,CAACJ,SAAS,CAAC;MAChC;IACJ,CAAC,CAAC,CACDK,KAAK,CAAC1B,KAAK,IAAI;MACZV,OAAO,CAACU,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EAED,MAAM2B,oBAAoB,GAAIC,CAAC,IAAK;IAChChD,WAAW,CAACgD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3B,IAAIjD,cAAc,CAACqB,OAAO,EAAE;MACxBrB,cAAc,CAACqB,OAAO,CAACd,IAAI,GAAGwC,CAAC,CAACC,MAAM,CAACC,KAAK;IAChD;EACJ,CAAC;EAED,IAAI,CAACzD,OAAO,EAAC;IACT,OAAO,IAAI;EACf;EAEA,oBACIL,OAAA;IAAK+D,SAAS,EAAC,gDAAgD;IAACC,KAAK,EAAE;MAACC,KAAK,EAAC;IAAO,CAAE;IAAAC,QAAA,eACvFlE,OAAA;MAAK+D,SAAS,EAAC,iBAAiB;MAAAG,QAAA,gBAC5BlE,OAAA;QAAAkE,QAAA,gBACIlE,OAAA;UAAOmE,OAAO,EAAC,UAAU;UAAAD,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClDvE,OAAA;UAAQwE,EAAE,EAAC,UAAU;UAACV,KAAK,EAAEnD,QAAS;UAAC8D,QAAQ,EAAEd,oBAAqB;UAAAO,QAAA,EACjEjE,SAAS,CAACyE,GAAG,CAACtD,IAAI,iBACfpB,OAAA;YAAwB8D,KAAK,EAAE1C,IAAI,CAAClB,IAAK;YAAAgE,QAAA,EAAE9C,IAAI,CAACjB;UAAI,GAAvCiB,IAAI,CAAClB,IAAI;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuC,CAChE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNvE,OAAA;QAAQ+D,SAAS,EAAC,cAAc;QAACY,OAAO,EAAExC,cAAe;QAACyC,QAAQ,EAAEnE,WAAY;QAAAyD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/FvE,OAAA;QAAQ+D,SAAS,EAAC,cAAc;QAACY,OAAO,EAAEtC,aAAc;QAACuC,QAAQ,EAAE,CAACnE,WAAY;QAAAyD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9FvE,OAAA;QAAQ+D,SAAS,EAAC,cAAc;QAACY,OAAO,EAAEpC,cAAe;QAACqC,QAAQ,EAAE,CAACnE,WAAY;QAAAyD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChGvE,OAAA;QAAKwE,EAAE,EAAC,QAAQ;QAACT,SAAS,EAAC,QAAQ;QAAAG,QAAA,EAAE3D;MAAM;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACjE,EAAA,CApHIF,cAAc;AAAAyE,EAAA,GAAdzE,cAAc;AAsHpB,eAAeA,cAAc;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}