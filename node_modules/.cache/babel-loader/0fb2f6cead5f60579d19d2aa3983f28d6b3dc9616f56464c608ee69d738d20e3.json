{"ast":null,"code":"var _jsxFileName = \"D:\\\\main\\\\src\\\\components\\\\voiceInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './css/voiceInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInterface = ({\n  onSelect,\n  isVe\n}) => {\n  _s();\n  const [status, setStatus] = useState(\"Click the button to start\");\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Initialize Speech Recognition\n  const initializeRecognition = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.onstart = () => {\n      setStatus(\"Listening...\");\n    };\n    recognition.onresult = event => {\n      const transcript = event.results[event.results.length - 1][0].transcript.trim();\n      setStatus(`You said: ${transcript}`);\n      processUserInput(transcript);\n    };\n    recognition.onerror = event => {\n      setStatus(`Error occurred: ${event.error}`);\n    };\n    recognition.onend = () => {\n      setStatus(\"Stopped listening.\");\n    };\n    recognitionRef.current = recognition;\n  };\n  const startListening = () => {\n    if (!recognitionRef.current) {\n      initializeRecognition();\n    }\n    recognitionRef.current.start();\n    setIsListening(true);\n  };\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n    setIsListening(false);\n  };\n  const pauseListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n    setIsListening(false);\n    setStatus(\"Paused listening.\");\n  };\n  const processUserInput = transcript => {\n    fetch('/processVoiceInput', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userInput: transcript\n      })\n    }).then(response => response.json()).then(data => {\n      const utterance = new SpeechSynthesisUtterance(data.response);\n      speechSynthesis.speak(utterance);\n    }).catch(error => {\n      console.error('Error processing input:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-y-0 right-0 bg-whitesmoke-100 z-50\",\n    style: {\n      width: \"305px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-interface\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"voice-button\",\n        onClick: startListening,\n        disabled: isListening,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"voice-button\",\n        onClick: stopListening,\n        disabled: !isListening,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"voice-button\",\n        onClick: pauseListening,\n        disabled: !isListening,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"status\",\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInterface, \"fg2flE+cjcg3wyNlEx2DxTIKiRc=\");\n_c = VoiceInterface;\nexport default VoiceInterface;\nvar _c;\n$RefreshReg$(_c, \"VoiceInterface\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","VoiceInterface","onSelect","isVe","_s","status","setStatus","isListening","setIsListening","recognitionRef","initializeRecognition","recognition","window","webkitSpeechRecognition","continuous","interimResults","onstart","onresult","event","transcript","results","length","trim","processUserInput","onerror","error","onend","current","startListening","start","stopListening","stop","pauseListening","fetch","method","headers","body","JSON","stringify","userInput","then","response","json","data","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","catch","console","className","style","width","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["D:/main/src/components/voiceInterface.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './css/voiceInterface.css';\n\nconst VoiceInterface : React.FC<SideNavbarProps> = ({ onSelect, isVe }) => {\n    const [status, setStatus] = useState(\"Click the button to start\");\n    const [isListening, setIsListening] = useState(false);\n    const recognitionRef = useRef(null);\n\n    // Initialize Speech Recognition\n    const initializeRecognition = () => {\n        const recognition = new window.webkitSpeechRecognition();\n        recognition.continuous = true;\n        recognition.interimResults = false;\n\n        recognition.onstart = () => {\n            setStatus(\"Listening...\");\n        };\n\n        recognition.onresult = (event) => {\n            const transcript = event.results[event.results.length - 1][0].transcript.trim();\n            setStatus(`You said: ${transcript}`);\n            processUserInput(transcript);\n        };\n\n        recognition.onerror = (event) => {\n            setStatus(`Error occurred: ${event.error}`);\n        };\n\n        recognition.onend = () => {\n            setStatus(\"Stopped listening.\");\n        };\n\n        recognitionRef.current = recognition;\n    };\n\n    const startListening = () => {\n        if (!recognitionRef.current) {\n            initializeRecognition();\n        }\n        recognitionRef.current.start();\n        setIsListening(true);\n    };\n\n    const stopListening = () => {\n        if (recognitionRef.current) {\n            recognitionRef.current.stop();\n        }\n        setIsListening(false);\n    };\n\n    const pauseListening = () => {\n        if (recognitionRef.current) {\n            recognitionRef.current.stop();\n        }\n        setIsListening(false);\n        setStatus(\"Paused listening.\");\n    };\n\n    const processUserInput = (transcript) => {\n        fetch('/processVoiceInput', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ userInput: transcript })\n        })\n        .then(response => response.json())\n        .then(data => {\n            const utterance = new SpeechSynthesisUtterance(data.response);\n            speechSynthesis.speak(utterance);\n        })\n        .catch(error => {\n            console.error('Error processing input:', error);\n        });\n    };\n\n    return (\n    <div className=\"fixed inset-y-0 right-0 bg-whitesmoke-100 z-50\" style={{width:\"305px\"}}>\n        <div className=\"voice-interface\">\n            <button className=\"voice-button\" onClick={startListening} disabled={isListening}>Start</button>\n            <button className=\"voice-button\" onClick={stopListening} disabled={!isListening}>Stop</button>\n            <button className=\"voice-button\" onClick={pauseListening} disabled={!isListening}>Pause</button>\n            <div id=\"status\" className=\"status\">{status}</div>\n        </div>\n    </div>\n    );\n};\n\nexport default VoiceInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}